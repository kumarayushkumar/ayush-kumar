---
import { Picture } from 'astro:assets'
import { product } from '../data/product'
---

<section id="product">
  <div class="wrapper flex-col mt-48 font-medium">
    <h2 class="font-semibold text-zinc-200">Launched so far</h2>
    <div class="flex gap-20 mt-8">
      <div id="product-display" class="lg:flex-4/5">
        {
          product.map((item, index) => (
            <a
              href={item.liveLink}
              target="_blank"
              rel="noopener"
              class={`product-item flex flex-col sm:flex-row gap-3 ${item.liveLink ? 'group custom-cursor' : ''} ${index === 0 ? '' : 'hidden'}`}
              data-index={index}>
              <div class="sm:flex-3/4 overflow-hidden">
                <Picture
                  src={item.image}
                  alt="Product visual"
                  class={`w-auto object-contain transition-transform duration-[400ms] ${item.liveLink ? 'group-hover:scale-[1.04]' : ''}`}
                  loading="lazy"
                  fallbackFormat="png"
                  formats={['avif', 'webp']}
                  draggable="false"
                />
              </div>
              <div class="font-mono flex flex-col gap-1 sm:flex-1/4">
                <p class="text-sm md:text-base !leading-[140%] md:tracking-wide">{item.description}</p>
              </div>
            </a>
          ))
        }
      </div>
      <div class="hidden lg:block lg:flex-1/5">
        {
          product.map((item, index) => (
            <p
              id={`product-${index}`}
              class={`text-base font-mono product-indicator ${index === 0 ? 'text-zinc-300' : 'text-zinc-500'}`}>
              {index + 1} {item.name}
            </p>
          ))
        }
      </div>
    </div>
    <p class="mt-40">
      I Believe that knowing How to Sell and tell your Story is as Important as
      Building a Great Product. That's why I spend my time Learning Business
      Strategy, understanding Human Psychology, and reading books on Design,
      Storytelling, and Startups.
    </p>
  </div>
</section>

<script>
  let currentProductIndex = 0
  const productItems = document.querySelectorAll('.product-item')
  const productIndicators = document.querySelectorAll('.product-indicator')
  const totalProducts = productItems.length
  let intervalId: ReturnType<typeof setInterval> | null = null
  let isPaused = false

  function showProduct(index: number) {
    productItems.forEach((item, i) => {
      if (i === index) {
        item.classList.remove('hidden')
      } else {
        item.classList.add('hidden')
      }
    })

    productIndicators.forEach((indicator, i) => {
      if (i === index) {
        indicator.classList.remove('text-zinc-500')
        indicator.classList.add('text-zinc-300')
      } else {
        indicator.classList.remove('text-zinc-300')
        indicator.classList.add('text-zinc-500')
      }
    })
  }

  function cycleProducts() {
    if (!isPaused) {
      currentProductIndex = (currentProductIndex + 1) % totalProducts
      showProduct(currentProductIndex)
    }
  }

  function startCycling() {
    if (totalProducts > 1 && !intervalId) {
      intervalId = setInterval(cycleProducts, 2000)
    }
  }

  productItems.forEach(item => {
    item.addEventListener('mouseenter', () => {
      isPaused = true
    })

    item.addEventListener('mouseleave', () => {
      isPaused = false
    })
  })

  startCycling()
</script>
